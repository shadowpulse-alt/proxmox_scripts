#!/bin/bash

# Chemin vers les fichiers de configuration
SSHD_CONFIG="/etc/ssh/sshd_config"
SUDOERS_FILE="/etc/sudoers"

# Demander le nom de l'utilisateur
read -rp "Nom d'utilisateur à configurer : " USERNAME

# Vérifier si l'utilisateur existe
if ! id "$USERNAME" &>/dev/null; then
    echo "❌ Utilisateur \"$USERNAME\" introuvable. Création en cours..."
    adduser "$USERNAME"
fi

# Config SSH : décommenter et activer certaines options
sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' "$SSHD_CONFIG"
sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' "$SSHD_CONFIG"
sed -i 's/#AuthorizedKeysFile\s\+.ssh\/authorized_keys\s\+.ssh\/authorized_keys2/AuthorizedKeysFile     .ssh\/authorized_keys .ssh\/authorized_keys2/' "$SSHD_CONFIG"
sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' "$SSHD_CONFIG"

# Redémarrer le service SSH
systemctl restart sshd

# Ajouter l'utilisateur au sudoers s'il ne l'est pas déjà
if ! grep -q "^$USERNAME\s\+ALL=(ALL:ALL) ALL" "$SUDOERS_FILE"; then
    sed -i "/# User privilege specification/a $USERNAME    ALL=(ALL:ALL) ALL" "$SUDOERS_FILE"
fi

# Préparation des clés SSH
SSH_KEYS="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHrDMU4abJhX5TL57TBKTxTdJQiLFrWcP8EhAOkIsnQC EdR0Z@github/102168399 # ssh-import-id gh:EdR0Z
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINAvUilbFU5wwh+3q1gedc9W2dIWzcT6giOwR58y5iEr ed25519-key-20240613
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOrE9/aeGwH4XZ6c0AfCVE+JCD7zKnTh7b4Jd+XV+/oP Generated By Termius"

# Création et sécurisation du dossier .ssh de root
mkdir -p /root/.ssh
chmod 700 /root/.ssh
touch /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys
if ! grep -q "${SSH_KEYS}" /root/.ssh/authorized_keys; then
    echo "$SSH_KEYS" >> /root/.ssh/authorized_keys
fi

# Création et sécurisation du dossier .ssh de l'utilisateur
USER_HOME=$(eval echo "~$USERNAME")
mkdir -p "$USER_HOME/.ssh"
chmod 700 "$USER_HOME/.ssh"
touch "$USER_HOME/.ssh/authorized_keys"
chmod 600 "$USER_HOME/.ssh/authorized_keys"
chown -R "$USERNAME:$USERNAME" "$USER_HOME/.ssh"

if ! grep -q "${SSH_KEYS}" "$USER_HOME/.ssh/authorized_keys"; then
    echo "$SSH_KEYS" >> "$USER_HOME/.ssh/authorized_keys"
fi

echo "✅ Configuration terminée pour l'utilisateur \"$USERNAME\". SSH prêt, clés déployées et sudo activé."
